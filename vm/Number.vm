function Number.draw0 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 0
push argument 1
push argument 0
push argument 2
add
push argument 1
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 0
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 2
add
push argument 0
push argument 2
add
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 2
add
push argument 1
push argument 0
push argument 2
add
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Number.draw1 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 0
push argument 2
push constant 2
call Math.divide 2
add
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
push argument 0
push argument 2
add
push argument 1
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 2
add
push argument 1
push argument 0
push argument 2
add
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Number.draw2 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 0
push argument 1
push argument 0
push argument 2
add
push argument 1
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
push argument 0
push argument 2
add
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 2
add
push argument 0
push argument 2
add
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 2
add
push argument 1
push argument 0
push argument 2
add
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
push argument 0
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Number.draw3 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 0
push argument 1
push argument 0
push argument 2
add
push argument 1
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 2
add
push argument 0
push argument 2
add
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 2
add
push argument 1
push argument 0
push argument 2
add
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
push argument 0
push argument 2
add
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Number.draw4 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 0
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
push argument 0
push argument 2
add
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 2
add
push argument 1
push argument 0
push argument 2
add
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 0
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Number.draw5 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 0
push argument 1
push argument 0
push argument 2
add
push argument 1
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
push argument 0
push argument 2
add
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 2
add
push argument 0
push argument 2
add
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 0
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 2
add
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
push argument 0
push argument 2
add
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Number.draw6 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 0
push argument 1
push argument 0
push argument 2
add
push argument 1
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
push argument 0
push argument 2
add
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 2
add
push argument 0
push argument 2
add
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 0
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 2
add
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
push argument 0
push argument 2
add
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Number.draw8 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 0
push argument 1
push argument 0
push argument 2
add
push argument 1
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 0
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 2
add
push argument 0
push argument 2
add
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 2
add
push argument 1
push argument 0
push argument 2
add
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
push argument 0
push argument 2
add
push argument 1
push argument 2
push constant 2
call Math.divide 2
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Number.draw 0
push argument 3
push constant 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 1
push argument 2
call Number.draw2 3
pop temp 0
label IF_FALSE0
push argument 3
push constant 4
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
push argument 1
push argument 2
call Number.draw4 3
pop temp 0
label IF_FALSE1
push argument 3
push constant 8
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
push argument 1
push argument 2
call Number.draw8 3
pop temp 0
label IF_FALSE2
push argument 3
push constant 16
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 0
push argument 1
push argument 2
call Number.draw1 3
pop temp 0
push argument 0
push argument 2
add
push constant 3
add
push argument 1
push argument 2
call Number.draw6 3
pop temp 0
label IF_FALSE3
push argument 3
push constant 32
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 0
push argument 1
push argument 2
call Number.draw3 3
pop temp 0
push argument 0
push argument 2
add
push constant 3
add
push argument 1
push argument 2
call Number.draw2 3
pop temp 0
label IF_FALSE4
push argument 3
push constant 64
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push argument 0
push argument 1
push argument 2
call Number.draw6 3
pop temp 0
push argument 0
push argument 2
add
push constant 3
add
push argument 1
push argument 2
call Number.draw4 3
pop temp 0
label IF_FALSE5
push argument 3
push constant 128
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push argument 0
push argument 1
push argument 2
call Number.draw1 3
pop temp 0
push argument 0
push argument 2
add
push constant 3
add
push argument 1
push argument 2
call Number.draw2 3
pop temp 0
push argument 0
push constant 2
push argument 2
call Math.multiply 2
add
push constant 5
add
push argument 1
push argument 2
call Number.draw8 3
pop temp 0
label IF_FALSE6
push argument 3
push constant 256
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push argument 0
push argument 1
push argument 2
call Number.draw2 3
pop temp 0
push argument 0
push argument 2
add
push constant 3
add
push argument 1
push argument 2
call Number.draw5 3
pop temp 0
push argument 0
push constant 2
push argument 2
call Math.multiply 2
add
push constant 5
add
push argument 1
push argument 2
call Number.draw6 3
pop temp 0
label IF_FALSE7
push argument 3
push constant 512
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push argument 0
push argument 1
push argument 2
call Number.draw5 3
pop temp 0
push argument 0
push argument 2
add
push constant 3
add
push argument 1
push argument 2
call Number.draw1 3
pop temp 0
push argument 0
push constant 2
push argument 2
call Math.multiply 2
add
push constant 5
add
push argument 1
push argument 2
call Number.draw2 3
pop temp 0
label IF_FALSE8
push argument 3
push constant 1024
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push argument 0
push argument 1
push argument 2
call Number.draw1 3
pop temp 0
push argument 0
push argument 2
add
push constant 3
add
push argument 1
push argument 2
call Number.draw0 3
pop temp 0
push argument 0
push constant 2
push argument 2
call Math.multiply 2
add
push constant 5
add
push argument 1
push argument 2
call Number.draw2 3
pop temp 0
push argument 0
push constant 3
push argument 2
call Math.multiply 2
add
push constant 7
add
push argument 1
push argument 2
call Number.draw4 3
pop temp 0
label IF_FALSE9
push argument 3
push constant 2048
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push argument 0
push argument 1
push argument 2
call Number.draw2 3
pop temp 0
push argument 0
push argument 2
add
push constant 3
add
push argument 1
push argument 2
call Number.draw0 3
pop temp 0
push argument 0
push constant 2
push argument 2
call Math.multiply 2
add
push constant 5
add
push argument 1
push argument 2
call Number.draw4 3
pop temp 0
push argument 0
push constant 3
push argument 2
call Math.multiply 2
add
push constant 7
add
push argument 1
push argument 2
call Number.draw8 3
pop temp 0
label IF_FALSE10
push constant 0
return
